{"expireTime":9007200889244039000,"key":"gatsby-plugin-mdx-entire-payload-41ca74fc6e9bbe56368ed4c1d9b251cc-","val":{"mdast":{"type":"root","children":[{"type":"paragraph","children":[{"type":"text","value":"This is the index.\n","position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":2,"column":1,"offset":19},"indent":[1]}},{"type":"link","title":null,"url":"/digital-gardens","children":[{"type":"text","value":"Digital garden resources","position":{"start":{"line":2,"column":2,"offset":20},"end":{"line":2,"column":26,"offset":44},"indent":[]}}],"position":{"start":{"line":2,"column":1,"offset":19},"end":{"line":2,"column":45,"offset":63},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":2,"column":45,"offset":63},"end":{"line":3,"column":1,"offset":64},"indent":[1]}},{"type":"link","title":null,"url":"/dummy","children":[{"type":"text","value":"Dummy","position":{"start":{"line":3,"column":2,"offset":65},"end":{"line":3,"column":7,"offset":70},"indent":[]}}],"position":{"start":{"line":3,"column":1,"offset":64},"end":{"line":3,"column":16,"offset":79},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":3,"column":16,"offset":79},"indent":[1,1]}},{"type":"export","value":"export const _frontmatter = {\"title\":\"Index\"}","position":{"start":{"line":5,"column":1,"offset":81},"end":{"line":5,"column":46,"offset":126},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":5,"column":46,"offset":126}}},"scopeImports":["import * as React from 'react'"],"scopeIdentifiers":["React"],"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Index\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"This is the index.\\n\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/digital-gardens\"\n  }, \"Digital garden resources\"), \"\\n\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/dummy\"\n  }, \"Dummy\")));\n}\n;\nMDXContent.isMDXComponent = true;","rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nexport const _frontmatter = {\n  \"title\": \"Index\"\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <p>{`This is the index.\n`}<a parentName=\"p\" {...{\n        \"href\": \"/digital-gardens\"\n      }}>{`Digital garden resources`}</a>{`\n`}<a parentName=\"p\" {...{\n        \"href\": \"/dummy\"\n      }}>{`Dummy`}</a></p>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}