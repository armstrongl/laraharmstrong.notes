{"componentChunkName":"component---node-modules-gatsby-theme-andy-src-templates-note-js","path":"/tweet-lcp-quotes","result":{"data":{"brainNote":{"slug":"tweet-lcp-quotes","title":"Tweet LCP Quotes","childMdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Tweet LCP Quotes\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"How can people come to know about what you speak in the podcasts without listening to them?\"), mdx(\"p\", null, \"A half baked solution I figured out is to tweet about the things we speak in the episode occasionally. So, by looking at the twitter feed, one can get a feel for what we actually talk.\"), mdx(\"p\", null, \"I built this with the help of \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"/github\"\n  }), \"GitHub\"), \" Actions. I have an \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/aravindballa/learningcurve.dev/blob/master/.github/workflows/tweet.yml\"\n  }), \"action\"), \" which runs on a cron schedule and runs \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"yarn tweet\"), \" which executes a script. \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"0 10,16 * * *\"), \" to be precise. That is 1530 hrs and 2130 hrs IST to be precise.\"), mdx(\"p\", null, \"I have a \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/aravindballa/learningcurve.dev/blob/master/scripts/getQuote.js\"\n  }), \"script\"), \" which fetches a random quote from the transcripts (which are in the repo as markdown files) and then tweets it using \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"/twitter\"\n  }), \"Twitter\"), \" API.\"));\n}\n;\nMDXContent.isMDXComponent = true;"},"inboundReferenceNotes":[{"title":"Learning Curve podcast","slug":"learning-curve","childMdx":{"excerpt":"Speaking to a mic is hard. It's similar to making a video while speaking to camera. But then, I am slowing getting used to it and enjoyingâ€¦"}}],"outboundReferenceNotes":[{"title":"github","slug":"github","childMdx":{"excerpt":""}},{"title":"twitter","slug":"twitter","childMdx":{"excerpt":""}}]},"site":{"siteMetadata":{"title":"@aravindballa's notes"}}},"pageContext":{"slug":"tweet-lcp-quotes"}}}